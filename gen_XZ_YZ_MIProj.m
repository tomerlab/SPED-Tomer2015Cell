function [ ] = gen_XZ_YZ_MIProj()
%%gen_XZ_YZ_MIProj generates XZ and YZ projections of a defined set of time
%points
%Author: Raju Tomer (rajutomer@gmail.com)
%%

%%
%%%%%% Parameters %%%%%
no_of_threads = 8; % no. of workers
dir_base = 'D:\SPED_data\Exp1'; % base directory
dir_data = [dir_base '\FoverF\DC10']; % data dir
dir_out = [dir_base '\Max_XZ_YZ\FoverF']; % output dir
stack_size = [632 4096 39]; % stack size, ImageJ: Height, Width, slices
voxel_size = [0.73 0.73 5]; % voxel size
start_image_ind = 1; % start image ind (corresponding to start time point).
end_image_ind = 2500; % end image ind
DC_IT = 10; % used for parsing files that were generated by DC_IT iterations of deconvolution
%%%%%%%%%%%%%%%%%%
%%

%%
scaleCoeff = [1 1 voxel_size(3)/voxel_size(1)];
z = 1:stack_size(3);
zi=1:1/scaleCoeff(3):stack_size(3);
list = dir([dir_data '\F_DC' num2str(DC_IT) '*.tif']);

parpool(no_of_threads);
parfor i = start_image_ind:end_image_ind
    fname = [dir_data '\' list(i).name];
    im = zeros([stack_size(1) stack_size(2) stack_size(3)], 'uint16');
    for r = 1:stack_size(3)
        im(:,:,r) = imread(fname,r);
    end
    im_final = permute(interp1(z,permute(single(im),[3 1 2]),zi),[2 3 1]);
    ofname_mip_xz = [dir_out '\MAX_XZ_' list(i).name '.tif'];
    ofname_mip_yz = [dir_out '\MAX_YZ_' list(i).name '.tif'];
    imwrite(uint16(squeeze(max(im_final,[],1))), ofname_mip_xz, 'tiff', 'Compression', 'none');
    imwrite(uint16(squeeze(max(im_final,[],2))), ofname_mip_yz, 'tiff', 'Compression', 'none');
end
delete(gcp('nocreate'));